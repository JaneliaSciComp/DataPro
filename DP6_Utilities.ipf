//	DataPro Utilities//	last updated 12/29/99#pragma rtGlobals=1		// Use modern global access method.#include <Strings as Lists>#include <Axis Utilities>//---------------------- Graph Axis Scaling Procedures -----------------------//Function RescaleAxes()	// from acquire	String browser_name, browser_folder, savDF, doit	Variable browser_number	savDF=GetDataFolder(1)	browser_number=GetBrowserNumber()	sprintf browser_name "DataProBrowser_%d", browser_number	sprintf browser_folder "root:DP_Browser_%d", browser_number	if (browser_number<1)		browser_name="DataProBrowser"		browser_folder="root:DP_Browser"	endif	SetDataFolder browser_folder	NVAR xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax	SVAR thiswave=thiswave	ControlInfo cursor_check	if (V_value>0)		sprintf doit, "PlaceCursors(\"%s\")", thiswave		Execute doit	endif	ControlInfo autoscaley_check	if (V_value>0)		Setaxis /A left	else		Setaxis left ymin, ymax	endif	ControlInfo autoscalex_check	if (V_value>0)		Setaxis /A bottom	else		Setaxis bottom xmin, xmax	endif	SetDataFolder savDFEndFunction GetAxesLimits()	String savDF, browser_name, browser_folder	savDF=GetDataFolder(1)	Variable browser_number	browser_number=GetBrowserNumber()	sprintf browser_name "DataProBrowser_%d", browser_number	sprintf browser_folder "root:DP_Browser_%d", browser_number	if (browser_number<1)		browser_name="DataProBrowser"		browser_folder="root:DP_Browser"	endif	SetDataFolder browser_folder	NVAR xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax	GetAxis /Q bottom	xmin=V_min; xmax=V_max	GetAxis /Q left	ymin=V_min; ymax=V_max	SetDataFolder savDFEndFunction PlaceCursors(where)	String where	NVAR acsrx=acsrx, bcsrx=bcsrx	Cursor /C=(0,0,0) A, $where, acsrx	Cursor /C=(0,0,0) B, $where, bcsrxEnd//------------------FUNCTIONS AND PROCEDURES FOR WAVE NOTES------------------//Function WriteWaveNote(theWave, theNote, theValue)	Wave theWave	String theNote, theValue	Variable start, first, last	String oldnote, newnote	oldnote=note(theWave)	start=strsearch(oldnote,theNote,0)	first=strsearch(oldnote,"=",start)	last=strsearch(oldnote,"\r", first)	if (start<0)		sprintf newnote, "%s=%s", theNote, theValue	else		sprintf newnote, "%s%s%s", oldnote[0,first], theValue,oldnote[last,strlen(oldnote)]		Note /K theWave	endif	Note theWave, newnoteEndFunction GetWaveNoteNumber(theWave, theNote)	Wave theWave	String theNote	Variable start, theValue	String oldnote, newnote//	String savDF=GetDataFolder(1)//	SetDataFolder root:	oldnote=note(theWave)	start=strsearch(oldnote,theNote,0)	if (start<0)		if (cmpstr(theNote,"BASELINE")==0)			Wavestats /Q/R=[0,100] theWave			theValue=V_avg		else			theValue=0		endif		sprintf newnote, "%s=%f", theNote, theValue		Note theWave, newnote	endif	theValue=NumberByKey(theNote, Note(theWave), "=", "\r")	return theValue//	SetDataFolder savDFEndFunction /S GetWaveNoteString(theWave, theNote)	Wave theWave	String theNote	String savDF=GetDataFolder(1)	SetDataFolder root:	Variable start	String theValue, oldnote, newnote	oldnote=note(theWave)	start=strsearch(oldnote,theNote,0)	if (start<0)		sprintf newnote, "%s=0", theNote		Note theWave, newnote	endif	theValue=StringByKey(theNote, Note(theWave), "=", "\r")	SetDataFolder savDF	return theValueEndFunction/S GetPopupItems(flag)	String flag	String theFolderPath = "root:DP_ADCDACcontrol"	if (!DataFolderExists(theFolderPath))		return ""	endif	String dfSave = GetDataFolder(1)	SetDataFolder theFolderPath	String items, theString	theString="*_"+flag	items=WaveList(theString, ";", "")	SetDataFolder dfSave		return itemsEnd