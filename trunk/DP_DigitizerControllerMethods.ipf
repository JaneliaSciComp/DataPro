//	DataPro//	DAC/ADC macros for use with Igor Pro and the ITC-16 or ITC-18//	Nelson Spruston//	Northwestern University//	project began 10/27/1998#pragma rtGlobals=1		// Use modern global access method.Function HandleADCChannelModePopupMenu(ctrlName,popNum,popStr) : PopupMenuControl	String ctrlName	Variable popNum	String popStr	Variable iChannel		iChannel=str2num(ctrlName[strlen(ctrlName)-1])	SwitchADCChannelMode(iChannel,popNum)  // notify the model	SyncADCGainSetVariableToModel(iChannel)  // notify the viewEndFunction HandleDACChannelModePopupMenu(ctrlName,popNum,popStr) : PopupMenuControl	String ctrlName	Variable popNum	String popStr	Variable iChannel		iChannel=str2num(ctrlName[strlen(ctrlName)-1])	SwitchDACChannelMode(iChannel,popNum)  // notify the model	SyncDACGainSetVariableToModel(iChannel)  // notify the viewEndFunction LoadSettingsButtonPressed(ctrlName) : ButtonControl	String ctrlName	// Change to the DigitizerControl data folder	String savedDF=GetDataFolder(1)	NewDataFolder /O/S root:DP_DigitizerControl	// Declare the DF vars we need	WAVE adcChannelOn	WAVE /T adcBaseName	WAVE adcType	WAVE adcGainCurrent	WAVE adcGainVoltage		WAVE dacChannelOn	WAVE dacType	WAVE dacGainCurrent	WAVE dacGainVoltage		WAVE dacMultiplier	WAVE /T dacWavePopupSelection	WAVE ttlOutputChannelOn	WAVE /T ttlWavePopupSelection	// Prompt user for a filename	String fileFilters="DataPro Digitizer Settings Files (*.dds):.dds;"	fileFilters += "All Files:.*;"	Variable settingsFile	Open /D /R /F=fileFilters settingsFile	// Doesn't actually open, just brings up file chooser	String fileNameAbs=S_fileName	Variable userCancelled=( strlen(fileNameAbs)==0 )	if (!userCancelled)		// Actually open the file		Open /Z /R settingsFile as fileNameAbs		Variable fileOpenedSuccessfully=(V_flag==0)		if (fileOpenedSuccessfully)			// Read the ADC settings from the file, set in model			String oneLine			Variable i			for (i=0; i<8; i+=1)				FReadLine settingsFile, oneLine				adcChannelOn[i]=str2num(oneLine)				FReadLine settingsFile, oneLine				adcBaseName[i]=oneLine[0,strlen(oneLine)-2]				FReadLine settingsFile, oneLine				adcType[i]=str2num(oneLine)				FReadLine settingsFile, oneLine				adcGainCurrent[i]=str2num(oneLine)				FReadLine settingsFile, oneLine				adcGainVoltage[i]=str2num(oneLine)			endfor			// Read the DAC settings from the file, set in model			for (i=0; i<4; i+=1)				FReadLine settingsFile, oneLine				dacChannelOn[i]=str2num(oneLine)				FReadLine settingsFile, oneLine				dacType[i]=str2num(oneLine)				FReadLine settingsFile, oneLine				dacGainCurrent[i]=str2num(oneLine)				FReadLine settingsFile, oneLine				dacGainVoltage[i]=str2num(oneLine)				FReadLine settingsFile, oneLine				String dacWaveNameInFile=oneLine[0,strlen(oneLine)-2]				String listOfDACWaveNames="_none_;"+Wavelist("*_DAC",";","")				if ( IsItemInList(dacWaveNameInFile,listOfDACWaveNames) )					dacWavePopupSelection[i]=dacWaveNameInFile				endif							FReadLine settingsFile, oneLine				dacMultiplier[i]=str2num(oneLine)			endfor			// Read the TTL output settings from the file, set in model			for (i=0; i<4; i+=1)				FReadLine settingsFile, oneLine				ttlOutputChannelOn[i]=str2num(oneLine)				FReadLine settingsFile, oneLine				String ttlWaveNameInFile=oneLine[0,strlen(oneLine)-2]				String listOfTTLWaveNames="_none_;"+Wavelist("*_TTL",";","")				if ( IsItemInList(ttlWaveNameInFile,listOfTTLWaveNames) )					ttlWavePopupSelection[i]=ttlWaveNameInFile				endif						endfor			// Close the file			Close settingsFile			// Do some housekeeping on the model			SyncGainsToChannelTypes()			// Notify the view that the model has changed			ModelMayHaveChanged()		endif	endif		// Restore the original DF	SetDataFolder savedDF	EndFunction SaveSettingsButtonPressed(ctrlName) : ButtonControl	String ctrlName	// Change to the DigitizerControl data folder	String savedDF=GetDataFolder(1)	NewDataFolder /O/S root:DP_DigitizerControl	// Declare the DF vars we need	WAVE adcChannelOn	WAVE adcGainCurrent	WAVE adcGainVoltage	WAVE /T adcBaseName	WAVE dacChannelOn	WAVE dacGainCurrent	WAVE dacGainVoltage	WAVE /T dacWavePopupSelection	WAVE ttlOutputChannelOn	WAVE /T ttlWavePopupSelection	WAVE adcType, dacType	WAVE dacMultiplier	// Prompt user for a filename	String fileFilters="DataPro Digitizer Settings Files (*.dds):.dds;"	fileFilters += "All Files:.*;"	Variable settingsFile	Open /D  /F=fileFilters settingsFile		// Doesn't actually open, just brings up file chooser	String fileNameAbs=S_fileName	Variable userCancelled=( strlen(fileNameAbs)==0 )	if (!userCancelled)		// Actually open the file		Open /Z settingsFile as fileNameAbs		Variable fileOpenedSuccessfully=(V_flag==0)		if (fileOpenedSuccessfully)			// Save the ADC parameters			Variable i			for (i=0;i<8;i+=1)				fprintf settingsFile, "%d\r", adcChannelOn[i]				fprintf settingsFile, "%s\r", adcBaseName[i]				fprintf settingsFile, "%d\r", adcType[i]				fprintf settingsFile, "%g\r", adcGainCurrent[i]				fprintf settingsFile, "%g\r", adcGainVoltage[i]			endfor						// Save the DAC parameters			String controlName			for (i=0;i<4;i+=1)				fprintf settingsFile, "%d\r", dacChannelOn[i]				fprintf settingsFile, "%d\r", dacType[i]				fprintf settingsFile, "%g\r", dacGainCurrent[i]				fprintf settingsFile, "%g\r", dacGainVoltage[i]				fprintf settingsFile, "%s\r", dacWavePopupSelection[i]				fprintf settingsFile, "%g\r", dacMultiplier[i]					endfor						// Save the TTL output parameters			for (i=0;i<4;i+=1)				fprintf settingsFile, "%d\r", ttlOutputChannelOn[i]				fprintf settingsFile, "%s\r", ttlWavePopupSelection[i]			endfor						// Close the file			Close settingsFile		else			// unable to open the file			DoAlert /T="Unable to open file" 0, "Unable to open file."		endif	endif		// Restore the original DF	SetDataFolder savedDFEnd