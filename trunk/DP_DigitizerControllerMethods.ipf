//	DataPro//	DAC/ADC macros for use with Igor Pro and the ITC-16 or ITC-18//	Nelson Spruston//	Northwestern University//	project began 10/27/1998#pragma rtGlobals=1		// Use modern global access method.Function HandleADCChannelModePopupMenu(ctrlName,popNum,popStr) : PopupMenuControl	String ctrlName	Variable popNum	String popStr	Variable iChannel		iChannel=str2num(ctrlName[strlen(ctrlName)-1])	SwitchADCChannelMode(iChannel,popNum)  // notify the model	SyncADCGainSetVariableToModel(iChannel)  // notify the viewEndFunction HandleDACChannelModePopupMenu(ctrlName,popNum,popStr) : PopupMenuControl	String ctrlName	Variable popNum	String popStr	Variable iChannel		iChannel=str2num(ctrlName[strlen(ctrlName)-1])	SwitchDACChannelMode(iChannel,popNum)  // notify the model	SyncDACGainSetVariableToModel(iChannel)  // notify the viewEndFunction LoadSettingsButtonPressed(ctrlName) : ButtonControl	String ctrlName	// Change to the DigitizerControl data folder	String savedDF=GetDataFolder(1)	NewDataFolder /O/S root:DP_DigitizerControl	// Declare the DF vars we need	WAVE adcon, adcgain	WAVE /T adcBaseName	WAVE dacon, dacgain	WAVE /T dacWavePopupSelection	WAVE ttlon	WAVE /T ttlWavePopupSelection	// Prompt the user for the name of the settings file	Variable settingsFile	Open /R settingsFile	// Read the ADC settings from the file, set in model	String oneLine	Variable i	for (i=0; i<8; i+=1)		FReadLine settingsFile, oneLine		adcon[i]=str2num(oneLine)		FReadLine settingsFile, oneLine		adcgain[i]=str2num(oneLine)		FReadLine settingsFile, oneLine		adcBaseName[i]=oneLine[0,strlen(oneLine)-2]	endfor	// Read the DAC settings from the file, set in model	for (i=0; i<4; i+=1)		FReadLine settingsFile, oneLine		dacon[i]=str2num(oneLine)		FReadLine settingsFile, oneLine		dacgain[i]=str2num(oneLine)		FReadLine settingsFile, oneLine		String dacWaveNameInFile=oneLine[0,strlen(oneLine)-2]		String listOfDACWaveNames="_none_;"+Wavelist("*_DAC",";","")		if ( IsItemInList(dacWaveNameInFile,listOfDACWaveNames) )			dacWavePopupSelection[i]=dacWaveNameInFile		endif				endfor		// Read the TTL output settings from the file, set in model	for (i=0; i<4; i+=1)		FReadLine settingsFile, oneLine		ttlon[i]=str2num(oneLine)		FReadLine settingsFile, oneLine		String ttlWaveNameInFile=oneLine[0,strlen(oneLine)-2]		String listOfTTLWaveNames="_none_;"+Wavelist("*_TTL",";","")		if ( IsItemInList(ttlWaveNameInFile,listOfTTLWaveNames) )			ttlWavePopupSelection[i]=ttlWaveNameInFile		endif				endfor		// Close the file	Close settingsFile	// Notify the view that the model has changed	ModelMayHaveChanged()		// Restore the original DF	SetDataFolder savedDF	EndFunction SaveSettingsButtonPressed(ctrlName) : ButtonControl	String ctrlName	// Change to the DigitizerControl data folder	String savedDF=GetDataFolder(1)	NewDataFolder /O/S root:DP_DigitizerControl	// Declare the DF vars we need	WAVE adcon, adcgain	WAVE /T adcBaseName	WAVE dacon, dacgain	WAVE /T dacWavePopupSelection	WAVE ttlon	WAVE /T ttlWavePopupSelection	// Prompt user for a filename	Variable settingsFile	Open settingsFile as "datapro_digitizer_settings"		// Save the ADC parameters	Variable i	for (i=0;i<8;i+=1)		fprintf settingsFile, "%d\r", adcon[i]		fprintf settingsFile, "%g\r", adcgain[i]		fprintf settingsFile, "%s\r", adcBaseName[i]	endfor		// Save the DAC parameters	String controlName	for (i=0;i<4;i+=1)		fprintf settingsFile, "%d\r", dacon[i]		fprintf settingsFile, "%g\r", dacgain[i]		fprintf settingsFile, "%s\r", dacWavePopupSelection[i]	endfor		// Save the TTL output parameters	for (i=0;i<4;i+=1)		fprintf settingsFile, "%d\r", ttlon[i]		fprintf settingsFile, "%s\r", ttlWavePopupSelection[i]	endfor		// Close the file	Close settingsFile		// Restore the original DF	SetDataFolder savedDFEnd