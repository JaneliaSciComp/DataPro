//	DataPro//	DAC/ADC macros for use with Igor Pro and the ITC-16 or ITC-18//	Nelson Spruston//	Northwestern University//	project began 10/27/1998Function OutputViewerViewConstructor() : Graph	OutputViewerModelConstructor()	String savedDF=GetDataFolder(1)	SetDataFolder root:DP_OutputViewer	Display /W=(100,150,700,400) /K=1 /N=OutputViewerView as "Output Viewer"	PopupMenu wavePopup,win=OutputViewerView, pos={650,20},size={115,20},proc=OVControllerWavePopupTwiddled	OVControllerSweeperWavesChanged()	SetDataFolder savedDF	EndFunction OutputViewerModelConstructor()	// Construct the model	// One model invariant: If outputWaveName is empty, then currentWaveName is the empty string	// Another model invariant: If outputWaveName is nonempty, then currentWaveName is equal to exactly one of the items in outputWaveName.	// Save the current DF	String savedDF=GetDataFolder(1)		// Create a new DF	NewDataFolder /O /S root:DP_OutputViewer					// Create instance vars	String /G outputWaveNames=""	String /G currentWaveName=""	// Restore the original data folder	SetDataFolder savedDFEndFunction OVControllerWavePopupTwiddled(ctrlName,itemNum,itemStr) : PopupMenuControl	String ctrlName	Variable itemNum	String itemStr	String savedDF=GetDataFolder(1)	SetDataFolder root:DP_OutputViewer	SVAR currentWaveName		if ( AreStringsEqual(itemStr,"(None)") )		currentWaveName=""		// should already be this, but what the heck	else		currentWaveName=itemStr	endif	OVViewModelChanged()EndFunction OVControllerSweeperWavesChanged()	// Used to notify the OV controller that the sweeper waves (may have) changed.	OVModelSweeperWavesChanged()		// Update our model	OVViewModelChanged()				// Sync the view to the modelEndFunction OVModelSweeperWavesChanged()	// Used to notify the Output Viewer model that the Sweeper waves have changed.	// Causes the output viewer to update it's own list of the sweeper waves, and change	// the current wave name if the old one no longer exists.	if (!DataFolderExists("root:DP_OutputViewer"))		return 0	endif	String savedDF=GetDataFolder(1)	SetDataFolder root:DP_OutputViewer	SVAR outputWaveNames	SVAR currentWaveName	// Update the list of output wave names	String dacWaveNames=GetSweeperWaveNamesEndingIn("_DAC")	String ttlWaveNames=GetSweeperWaveNamesEndingIn("_TTL")	outputWaveNames=CatLists(dacWaveNames,ttlWaveNames)	// If the current wave name is no longer valid, clear it	Variable nWaves=ItemsInList(outputWaveNames)	if (nWaves==0)		currentWaveName=""	else		if (IsItemInList(currentWaveName,outputWaveNames))			// do nothing, all is well		else			// if our current wave has gone away, just use the first output wave			currentWaveName=StringFromList(0,outputWaveNames)		endif	endif		// Restore the original data folder	SetDataFolder savedDF		EndFunction OVViewModelChanged()	// Used to notify the view that the model has changed.	// Causes the view to re-sync with the model.	if (!GraphExists("OutputViewerView"))		return 0		// Have to return something	endif	String savedDF=GetDataFolder(1)	SetDataFolder root:DP_OutputViewer	SVAR outputWaveNames	SVAR currentWaveName	Variable nWaves=ItemsInList(outputWaveNames)	String popupItems,currentPopupItem	if (nWaves==0)		popupItems="(None)"		currentPopupItem="(None)"		RemoveFromGraph /Z /W=OutputViewerView $"#0"		// The graph now has zero waves showing	else		popupItems=outputWaveNames		currentPopupItem=currentWaveName		Duplicate /O SweeperGetWaveByName(currentWaveName) currentWave		AppendToGraph /W=OutputViewerView currentWave		ModifyGraph /W=OutputViewerView grid(left)=1  // put the grid back		Label /W=OutputViewerView /Z bottom "Time (ms)"		Label /W=OutputViewerView /Z left currentWaveName+" (pure)"		// Don't want units in tic marks		ModifyGraph /W=OutputViewerView /Z tickUnit(bottom)=1		ModifyGraph /W=OutputViewerView /Z tickUnit(left)=1	endif	String popupItemsStupidized="\""+popupItems+"\""	PopupMenu wavePopup,win=OutputViewerView,value=#popupItemsStupidized	PopupMenu wavePopup,win=OutputViewerView,popmatch=currentPopupItem	SetDataFolder savedDF		End